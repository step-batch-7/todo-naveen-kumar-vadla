Features :
--DONE--  1. Create one or more to-do list with a title
--DONE--  2. View all the to-do lists
--DONE--  3. Add an item to a to-do list
--DONE--  4. Delete an item from to-do list
--DONE--  5. Mark an item as done and undone
--DONE--  6. Delete a todo list

New Features :
  1. Edit title:= Ability to edit their existing todo list title.
  2. Edit tasks:= Ability to edit their existing tasks.
  3. Search by title:=  Search the list by its title words.
  4. Search by tasks:= Search the todo item by its matched words.
  5. User Todo's:= A user can log in and log out off their account and work on their own todos.
  6. Home Page:= If not logged in it is a login page else it is the user's todo page/dashboard.

Data Structure :  
  * todo lists --> Array of list Objects 
      [{list1}, {list2}...]

  * lists --> Object contains title and listOfTasks
      { id: <number>, title: '<title>' tasks: [{task1}, {task1}, {task1}]}

  * tasks --> Array of task Objects and
      [{task1}, {task1}, {task1}...]

  * task1,task2... --> Objects contains task and isCompleted
      { id: <number>, task:'<task>', isCompleted:'true/false'}
  
  ex: 
  [
    {
      id: 1;
      title:'Improve english grammar '
      tasks: [ 
        { id: 1, work : 'reading english novel' },
        { id: 2, work : 'watching english tv shows' },
        { id: 3, work : 'speaking in english everyTime' },
      ]
    }
  ]

Set Up Environment :
  * create folders and files
  --DONE-- -> lib/
  --DONE-- | -> mimeTypes.js
  --DONE-- -> public/
  --DONE-- | -> css/
  --DONE-- | -> js/
  --DONE-- | -> images/
  --DONE-- | -> index.html
  --DONE-- -> templates/
  --DONE-- -> test/
  --DONE-- | -> handlersTest.js
  --DONE-- -> app.js
  --DONE-- -> server.js
  --DONE-- -> handlers.js
  --DONE-- -> .eslintrc.json
  --DONE-- -> .gitignore 

  * npm init -y
  --DONE-- -> package.json
  --DONE-- -> package-lock.json

  * Add requires dependencies
  --DONE-- -> nyc
  --DONE-- -> mocha
  --DONE-- -> eslint
  --DONE-- -> supertest
  --DONE-- -> growl
  --DONE-- -> terminal-notifier

Tasks :
  * Add default handlers for 
  --DONE-- -> method not allowed
  --DONE-- -> file not found
  --DONE-- -> serveStatic file
  
  * Add tests for default handlers
  --DONE-- -> method not allowed
  --DONE-- -> file not found
  --DONE-- -> serveStatic file

--DONE--  * move handlers.js and app.js to lib
--DONE--  * Create a homePage with title todo and an input field to enter todoList name and create button

--DONE--  * Add tests for homePage
